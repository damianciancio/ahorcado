# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest discover -p "*_test.py"
    #- name: Update code coverage
    #  run: |
    #    pip install codecov
    #    CODECOV_TOKEN="ea813815-7b17-4e2a-947b-18444d19c763"
    #    # codecov -t CODECOV_TOKEN
    #    bash <(curl -s https://codecov.io/bash) -t token
    - name: Generate coverage report
      run: |
        pip install codecov
        coverage erase
        coverage run -m pytest ahorcado.py
        coverage report
        CODECOV_TOKEN="ea813815-7b17-4e2a-947b-18444d19c763"
        bash <(curl -s https://codecov.io/bash) -t token
        coverage xml ahorcado.py
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Front-end test
      env:
        URL_TEST: ${{ secrets.URL_TEST }}
      run: |
        set -ex
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install ./google-chrome-stable_current_amd64.deb
        python -m pytest tests/test_web.py
